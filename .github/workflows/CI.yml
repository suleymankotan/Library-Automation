name: CI

on:
  pull_request:
    branches: [master]

jobs:
  Test:
    name: Test - Units
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Testdb01.
          POSTGRES_DB: hoaxify
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Build
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: mvn -B clean package -DskipTests --file pom.xml

      - name: Run unit tests
        run: mvn -B test --file pom.xml

  Sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Testdb01.
          POSTGRES_DB: hoaxify
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: SonarCloud
        run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}

  Build:
    name: Build - Docker Hub Push & GitHub Docker Packages Push
    runs-on: ubuntu-18.04
    needs: [Test, Sonar]

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build
        run: mvn -B clean package -DskipTests --file pom.xml

#      - name: Login to Docker Hub
#        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}

#      - name: Build Docker image
#        run: docker build -t ${{ secrets.REPO }} .

#      - name: Github Docker Packages Login
#        run: docker login docker.pkg.github.com -u suleymankotan -p ${{ secrets.GITHUB_TOKEN }}

#      - name: Github Tag Docker image
#        run: docker tag ${{ secrets.REPO }}  docker.pkg.github.com/suleymankotan/webservice-hoaxify/webservice-hoaxify:0.1.${{github.run_number}}-${{github.sha}} && docker tag ${{ secrets.REPO }}  docker.pkg.github.com/suleymankotan/webservice-hoaxify/webservice-hoaxify:latest

#      - name: Github Package Publish Docker image
#        run: docker push docker.pkg.github.com/suleymankotan/webservice-hoaxify/webservice-hoaxify:0.1.${{github.run_number}}-${{github.sha}} && docker push docker.pkg.github.com/suleymankotan/webservice-hoaxify/webservice-hoaxify:latest

#      - name: Github Package Docker logout
#        run: docker logout